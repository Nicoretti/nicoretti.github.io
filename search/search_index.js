var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#about-me","title":"About Me","text":""},{"location":"index.html#hi-my-name-is-nico","title":"Hi, my name is Nico","text":"<p>I am half Italian and half German, sadly don't really speak Italian though. Still, growing up and seeing two different cultures, their actions and their impact is a great gift I was lucky to receive.</p> <p>I would describe myself as a communicative, extroverted person, who likes to share his knowledge and loves to work with other people. I love to teach and mentor but also enjoy and appreciate being taught.</p> <p>One of my major personal missions is, to help people realize and tap  into the power of  Command Line Tools and the  Terminal in general.</p> <p>For some more details on my personal mindset checkout my User Manual .</p> <p></p>"},{"location":"projects.html","title":"Projects","text":""},{"location":"projects.html#open-source-projects","title":"Open Source Projects","text":"<p>If you are interested in all my open source work have a look at my  GitHub profile and my repositories on  GitHub.</p>"},{"location":"projects.html#crc","title":"CRC","text":"<p>Details</p> <p>A small, pure python library for calculating and verifying crc checksums</p> <ul> <li> Package</li> <li> Repository</li> <li> Documentation</li> </ul>"},{"location":"projects.html#prysk","title":"Prysk","text":"<p>Details</p> <p>A fork/rework of functional testing tool</p> <ul> <li> Package</li> <li> Repository</li> <li> Documentation</li> </ul>"},{"location":"projects.html#cli-book","title":"cli-book","text":"<p>Details</p> <p>A very work in progress of a book on how to write and use command line tools</p> <ul> <li> Repository</li> <li> Book</li> </ul>"},{"location":"projects.html#ka3005p","title":"ka3005p","text":"<p>Details</p> <p>Command line tool to remote control Korad, Tenma, RS, Velleman, Stamos, power supplies and other clones</p> <ul> <li> Package</li> <li> Repository</li> <li> Documentation</li> </ul>"},{"location":"projects.html#xxd-rs","title":"xxd-rs","text":"<p>Details</p> <p>A rust based clone of the popular xxd</p> <ul> <li> Package</li> <li> Repository</li> <li> Documentation</li> </ul>"},{"location":"projects.html#nc-network-sniffer","title":"nc-network-sniffer","text":"<p>Details</p> <p>A simple network sniffer for Linux</p> <ul> <li> Repository</li> <li> Documentation</li> </ul>"},{"location":"talks.html","title":"Talks","text":""},{"location":"talks.html#because-it-is-relevant","title":"Because it is relevant","text":"<p>Abstract</p> <p>\"Because it is Relevant,\" delves into the interconnectedness of tools across various domains and their significance in software development. Using the \"Magic Arm\" from photography as an analogy, it underscores how abstract concepts and tools can seamlessly transfer between different domains.</p> <p>Transitioning to Wireshark, the talk highlights its extensive applications. Based on actual problems, the speaker illustrates Wireshark's practical uses, demonstrating its effectiveness in debugging protocols, handling TLS encryption, extracting crucial data, and enhancing software performance.</p> <p>In conclusion, the talk emphasizes Wireshark's capabilities in tandem with other network tools, encouraging audiences to venture beyond their immediate domain to explore diverse tools. </p> <p> Slides</p>"},{"location":"talks.html#rust-vs-c","title":"Rust vs C++","text":"<p>Abstract</p> <p>Having been a C++ developer for quite a while, I answerd the question of \"Rust or C++\" for myself a while ago. How I ended up learning and digging into Rust was quite random though, thefore this talk tries to be a teaser to incentivize people to look into the language.</p> <p> Slides</p> <p>Note</p> <ul> <li>All red text (headings etc.) are links pointing to additional information.</li> <li>Desipite the click baity title, the talk focuses on rust features rather than \"bashing C++\" </li> <li>The presentation may need to be displyed with ~70% zoom in order to be displayed correctly</li> </ul>"},{"location":"talks.html#cli-first-why-how","title":"CLI - First <code>(Why &amp; How)</code>","text":"<p>Abstract</p> <p>Starting with a brief recap on \"why command line tools are great\". The main Talk focuses on best practises when writing command line tools, presented with a great deal of memes and an occasional rant.</p> <p> Slides</p>"},{"location":"talks.html#something-with-clis","title":"Something with CLI's","text":"<p>Abstract</p> <p>A workshop starter, with A quick look at some command line tool basics, examples, etc. and a spin towards rust command line tools at the end.</p> <p> Slides</p>"},{"location":"talks.html#command-line-tools-101","title":"Command Line Tools 101","text":"<p>Abstract</p> <p>A meme heavy foundation talk for command line beginners.  Covering some shell basic, CLI terminology and structure and best practices to focus on when implementing them.</p> <p>Slides</p> <p>Slides are not available or can't be shared</p>"},{"location":"talks.html#something-with-git","title":"Something with GIT","text":"<p>Abstract</p> <p>A intermidate ~10 minute talk about cool git features you may not have known yet.</p> <p>Slides</p> <p>Slides are not available or can't be shared</p>"},{"location":"talks.html#unittesting-using-gtestgmock","title":"UnitTesting using Gtest/Gmock","text":"<p>Abstract</p> <p>A Talk about Gtest &amp; Gmock, their differences, their features and their usage.</p> <p>Slides</p> <p>Slides are not available or can't be shared</p>"},{"location":"talks.html#boostcontainer","title":"Boost.Container","text":"<p>Abstract</p> <p>A quick look at the boost.container library.</p> <p> Slides</p>"},{"location":"user-manual.html","title":"User Manual","text":""},{"location":"user-manual.html#core-beliefs","title":"Core Beliefs","text":"<ul> <li> <p>By helping others to improve their skills and/or to learn something, everybody benefits</p> <p><code>(They, the company they are working for, the projects they are working on, their colleagues,   the end users, their future employers/projects \u2026)</code></p> </li> <li> <p>Code Quality is key and should be enforced as automated as possible</p> </li> <li>Simple is better than complex</li> <li>\u201cGetting things done\u201d is important but things are also \u201cDone when they are done\u201d.</li> </ul>"},{"location":"user-manual.html#what-i-value-in-others","title":"What I value in others","text":"<ul> <li>Collaboration <code>(beeing a team player)</code></li> <li>Transparency <code>(Direct and honest communication)</code></li> </ul>"},{"location":"user-manual.html#preferred-working-style","title":"Preferred working style","text":"<ul> <li> <p>I work best as part of a small, team 3-5 people </p> <p>Note</p> <p>I worked well in other sizes too (10, 20, 50), but personaly I think 3-5 people are the most effective.</p> </li> <li> <p>While I have worked in the office exclusively, in a hybrid setting, and fully remotely, all for extended periods, I can't say I have a specific favorite.</p> <p>Note</p> <p>No matter the setting, having a remote-aware team, even in an onsite environment, is beneficial from my point of view.  Additionally, in an onsite setting, the option for an occasional remote day or week is desirable.</p> </li> <li> <p>I like to work on an powerful but lightweight notebook</p> <p>Bias</p> <p>The operating system of my working device must be unix based (ideally Linux or MacOsx).</p> </li> <li> <p>I like to use the following peripherals, which I also have available by myself</p> <ul> <li>Keyboard (launch) </li> <li>Mouse (Razer DeathAdder V2)</li> <li>Monitor (DELL UltraSharp U3417\u00a0W)</li> </ul> </li> </ul>"},{"location":"user-manual.html#conditions-i-like-to-work-in","title":"Conditions I like to work in","text":"<ul> <li>Working with remote aware people</li> <li>Working with people which have a team- rather than a family- mindset</li> <li> <p>Working in a team where english is the default language for communication</p> <p>Info</p> <p>Because German is my first language, I realy enjoy communicating in english to improve and keep my english skills sharp.</p> </li> </ul>"},{"location":"user-manual.html#what-motivates-me","title":"What motivates me","text":"<ul> <li>When people I have been teaching/mentoring start teaching me stuff</li> <li>When the company/team has a clear dedication towards Software Quality</li> <li>A collective mission/goal to work towards</li> </ul>"},{"location":"user-manual.html#what-demotivates-me","title":"What demotivates me","text":"<ul> <li>Competition over Collaboration</li> <li>Lack of shared goals and roadmap/milestones</li> <li>Lack of ownership</li> <li>Schedule chicken like \"games\"</li> <li>Broken processes, structures</li> <li>Broken hierarchies (e.g. overly complex or sudo flat)</li> </ul>"},{"location":"user-manual.html#my-pet-peeves","title":"My pet peeves","text":"<ul> <li>Having a hidden agenda</li> <li>Taking credit for the work of others</li> </ul>"},{"location":"blog/index.html","title":"Overview","text":""},{"location":"blog/index.html#rss-feeds","title":"RSS-Feeds","text":"<ul> <li> Created</li> <li> Updated</li> </ul>"},{"location":"blog/index.html#articles","title":"Articles","text":""},{"location":"blog/2024/07/06/cli-syntax.html","title":"CLI Syntax","text":"<p>This blog article is essentially a repost of a small summary about CLI syntax on Unix and Windows systems. Originally intended it as a chapter for the cli-book I wanted to write. Unfortunately, I never found enough time to keep working on it. However, I still aim to gather more information and knowledge regarding the Terminal, Shells, and various command line tools available. Therefore, I decided to try sharing this information one blog post at a time. Since CLI syntax is crucial for understanding and developing CLI tools, I thought it would be beneficial to share and update the content I had initially written for the book. </p> <p>Before you start reading this article you may consider reading the POSIX Utility Conventions. It is approximately a 10-20 minute read which will provide a solid base when it comes to CLIs and their syntax.</p> <p>Let's get some content going</p>","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#terminology","title":"Terminology","text":"<p>If you read about <code>CLIs</code>, you will usually encounter specific terminology: <pre><code>utility, command, subcommand, argument, option, flag, switch, operand\n</code></pre> Still, the meanings may slightly differ depending on the source or context in which a term is mentioned. To ensure we are all on the same page regarding these terms, the table below describes the terms and their meanings in the context of this article and on this blog in general.</p> Term Meaning on this Blog Names in other Standards/Definitions command The CLI tool itself utility (Posix) subcommand A subcommand of a command or of a command group argument (required/positional) Required or Positional Argument operand (Posix) option A setting with an additional argument/value (key-value pair) option (Posix) switch Like an option but with a set of mutually exclusive arguments/values option (Posix) options Superset of flags + switches + options options (Posix) <p>Note</p> <p>With the specification above, there is ambiguity regarding the term <code>options</code>. Here, options could mean either:</p> <ul> <li>The plural of an option, a setting with an additional argument</li> <li><code>options</code>, the superset of <code>flags</code>, <code>switches</code>, and <code>option</code></li> </ul> <p>Therefore, when referring to the plural of option, one should say \"options of type option,\" and when referring to the superset of all <code>options</code>, <code>switches</code>, and <code>flags</code>, one should simply say \"options.\"</p> <p>Below, you will find an annotated help example of a CLI, demonstrating where and how the different terms and types find their place.</p>","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#unix-syntax","title":"Unix Syntax","text":"Symbol Element Description <code>Text</code> text Items you must type as shown <code>TEXT</code> upper case text Placeholder for which you must supply a value <code>&lt;name&gt;</code> text in angle brackets Placeholder for which you must supply a value <code>[]</code> bracket Optional items <code>{}</code> curly braces Set of mutually exclusive but required items, choose one <code>()</code> braces Set of mutually exclusive but required items, choose one <code>|</code> vertical bar Separates mutually exclusive items <code>\u2026</code> ellipsis Indicates that item (flag, option, argument, ...) can be repeated multiple times <code>-</code> dash Indicates start of short option(s), if it stands alone it is often used as file argument parameter to specify stdin <code>--</code> double dash Indicates the start of a long option or if not followed by an option name it indicates the end of the CLI arguments for the command","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#windows-syntax","title":"Windows Syntax","text":"Symbol Element Description <code>Text</code> Text Items you must type as shown <code>&lt;Text&gt;</code> Text inside angle brackets Placeholder for which you must supply a value <code>[Text]</code> Text inside square brackets Optional items <code>{Text}</code> Text inside braces Set of required items. You must choose one <code>|</code> Vertical bar Separator for mutually exclusive items. You must choose one <code>\u2026</code> Ellipsis Items that can be repeated and used multiple times <p>The original source for the table above can be found here.</p>","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#examples","title":"Examples","text":"","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#usage-examples","title":"Usage Examples","text":"Element Example(s) Required/Positional Arguments <code>ARGUMENT</code>, <code>&lt;argument&gt;</code>, <code>&lt;ARGUMENT&gt;</code> Option with value <code>--option=value</code>, <code>--option=VALUE</code>, <code>--option &lt;value&gt;</code>, <code>--option=&lt;value&gt;</code>, <code>--option value</code>, <code>--option VALUE</code> Switch <code>--light={on | off}</code>, <code>--power {up | down}</code> Flag <code>--track</code>, <code>--verbose</code>, <code>-V</code> Optional Items <code>--track</code>, <code>--verbose</code>, <code>-V</code>, <code>[&lt;argument&gt;]</code> Mutually-Exclusive &amp; Required <code>(--track | --no-track)</code>, <code>&lt;FILE&gt; | &lt;PATH&gt;</code> End of passing CLI arguments <code>user@host ~$ cli foo -b --this -- other args</code> Repeating Elements <code>&lt;argument&gt;...</code>","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#annotated-example-help","title":"Annotated Example Help","text":"<p>Note: Everything following <code>#</code> is a comment</p> <pre><code>Short description what this command does\n\nusage:\n\ncmd [flags] [options] &lt;username&gt; &lt;password&gt;\n\narguments:\n    &lt;username&gt;  which shall be used for the login             # 1. required/positional-argument\n    &lt;password&gt;  associated with the specified username        # 2. required/positional-argument\n\nflags:\n    -f, --force                 execute action anyway         # 5. flag\n    -h, --help                  show this help message        # 6. flag\n\noptions:\n    -i &lt;file&gt;, --input &lt;file&gt;   file which shall be processed # 3. option\n    -s &lt;unit&gt;, --speed &lt;unit&gt;   mph, kmh  [default: mph]      # 4. switch\n</code></pre>","tags":["CLI","Syntax"]},{"location":"blog/2024/07/06/cli-syntax.html#references-resources","title":"References &amp; Resources","text":"<ul> <li>POSIX Utility Conventions</li> <li>Windows Command-Line Syntax</li> </ul> <p>Note</p> <p>Git is an excellent resource for finding usage examples, seeing the CLI syntax in action, and understanding the nuances (it is well-documented, and there are plenty of answers available on Stack Overflow &amp; Co.). If you ever get stuck figuring out how to structure your CLI, I recommend browsing through some Git commands.</p>","tags":["CLI","Syntax"]},{"location":"blog/2024/04/24/daily-dose-of-cli-1.html","title":"Daily Dose Of CLI #1","text":""},{"location":"blog/2024/04/24/daily-dose-of-cli-1.html#quickly-spot-your-ip-addresses","title":"Quickly Spot Your IP-Addresses","text":"<pre><code>ip -c a\n</code></pre> <p>Kudos</p> <p>Kudos to  weinshec for pointing out that <code>a</code> also references the <code>address</code> object.</p>"},{"location":"blog/2024/04/24/daily-dose-of-cli-1.html#references","title":"References","text":"<ul> <li><code>man 8 ip</code></li> </ul>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html","title":"The Learning Python Care Package","text":"<p> Image created by DALL-E, OpenAI's image generation model.</p> <p>Over the past year, I've been approached by numerous individuals seeking recommendations for good Python learning resources. So I've decided to compile a somewhat comprehensive list in form of this article. Making it easier for me to share, by simply directing people here. If you've send here by me, I hope these resources meet your needs. If not, please let me know!</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#books","title":"Book(s)","text":""},{"location":"blog/2023/12/11/the-learning-python-care-package.html#fluent-python","title":"Fluent Python","text":"<p>Once you've moved past the very basics (syntax, etc.), this book stands out as the best, in my opinion. Recently, the second edition of this book was published. Despite owning a hard copy, I haven't had the time to read it yet. A short disclaimer: while the first edition is quite substantial, it's still a manageable size for reading as a physical book. However, the same can't be said for the second edition; it's quite hefty, making it more suitable for electronic reading.</p> <p>(Best Python book in my humble opinion)</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#pytest-book","title":"Pytest-Book","text":"<p>In my view, pytest is the go-to unit testing framework/library for Python. While I generally advocate for minimizing dependencies, especially when the Python standard library offers robust solutions, it's hard to argue against pytest. Once you grasp its potential and advantages, it is impossible to not go for it.</p> <p>This book is an excellent resource for testing, particularly with pytest. I highly recommend it for anyone looking to delve deeper into testing and harnessing the power of pytest.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#online-courses","title":"Online Courses","text":""},{"location":"blog/2023/12/11/the-learning-python-care-package.html#talk-python-to-me-courses","title":"Talk Python to Me Courses","text":"<p>These courses are nicely crafted with love and passion, suitable for beginners to intermediate learners (depending on the topic). The ownership (lifetime access model) is highly appreciated in this world of <code>subscription #%^*@-#</code>. A nice side effect is also that it supports Talk Python To Me and Co. Beginners should definitely explore the courses offered here.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#pluralsight-courses-by-austin-bingham-and-robert-smallshire","title":"Pluralsight Courses by Austin Bingham and Robert Smallshire","text":"<p>Both authors offer great courses packed with valuable information and are well-crafted. For those inclined towards reading, they have three books catering to different experience levels, covering similar ground:</p> <ul> <li>The Python Apprentice</li> <li>The Python Journeyman</li> <li>The Python Master</li> </ul> <p>While I haven't read these books personally, judging from their video courses, they are likely to be of high standard.</p> <p>Side Note (for Intermediate learners): You may find it beneficial to watch the videos at 1.2 - 1.4x speed, pausing or slowing down at the more \"interesting\" sections.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#programming-puzzles-and-exercises","title":"Programming Puzzles and Exercises","text":"<p>While preferences for programming puzzles and exercises vary greatly among individuals  (personally, I lean towards creating small CLI applications for various purposes), I've also done some puzzles here and there. Below, you'll find a fairly standard list of Python puzzles and exercises that might be interesting to some of you.</p> <ul> <li>CheckiO</li> <li>Exercism</li> <li>Python Mastery Exercises</li> </ul>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#idioms","title":"Idioms","text":"<p>Inspired by this gist I started collecting python idioms here.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#podcasts","title":"Podcasts","text":""},{"location":"blog/2023/12/11/the-learning-python-care-package.html#python-bytes","title":"Python Bytes","text":"<p><code>Python headlines dilivered directly to your earbuds</code></p> <p>Python Bytes is an entertaining weekly podcast of roughly 30 minutes. It's fantastic for getting quick updates and discovering new ideas (such as blog posts, new libraries, and frameworks) within the Python space.</p> <p>Although it's a podcast, the episodes are also live-streamed, allowing listeners to engage in a live chat during the show.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#talk-python-to-me","title":"Talk Python To Me","text":"<p><code>A podcast on Python and related technologies</code></p> <p>While the above description is accurate, it understates the true value of this podcast. </p> <p>My personal TL;DR would be: </p> <pre><code>An excellent ~60-minute podcast covering various detailed Python-related topics.\n</code></pre> <p>While not every episode might align with one's specific interests, they are consistently enjoyable to listen to. Alongside <code>Python Bytes</code>, this podcast offers an ideal way for staying updated on on Python and its community.</p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#talks","title":"Talks","text":""},{"location":"blog/2023/12/11/the-learning-python-care-package.html#stop-writing-classes-by-jack-diederich","title":"Stop Writing Classes by Jack Diederich","text":"<p>TL;DR: <code>Old but Gold!!</code></p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#transforming-code-into-beautiful-idiomatic-python-by-raymond-hettinger","title":"Transforming Code into Beautiful, Idiomatic Python by Raymond Hettinger","text":"<p>TL;DR: <code>Must watch talk on how to improve your python code.</code></p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#refactoring-python-why-and-how-to-restructure-your-code-by-brett-slatkin","title":"Refactoring Python: Why and how to restructure your code by Brett Slatkin","text":"<p>TL;DR: <code>Must watch talk on how to go about refacotring in python.</code></p>"},{"location":"blog/2023/12/11/the-learning-python-care-package.html#modern-dictionaries-by-raymond-hettinger","title":"Modern Dictionaries by Raymond Hettinger","text":"<p>TL;DR: <code>An interesting and insightful deep dive into dictionaries.</code></p>"},{"location":"dev-notes/index.html","title":"Warning","text":"<p> Image created by DALL-E, OpenAI's image generation model.</p> <p>Danger</p> <p>Welcome, fellow internet traveler.  Proceed with caution\u2014you are about to enter a disorganized area brimming with incomplete thoughts, links, and fragmented sentences. This section is essentially a wall of  post-its for myself, and likely not of much value to someone else.</p>"},{"location":"dev-notes/ldap.html","title":"Ldap","text":""},{"location":"dev-notes/ldap.html#basic-queries","title":"Basic Queries","text":""},{"location":"dev-notes/ldap.html#basic-anonymous-query","title":"Basic anonymous query","text":"<pre><code> ldapsearch -H ldap://127.0.0.1:1389 -x -LLL -s base -b \"dc=example,dc=org\n</code></pre> <pre><code>import ldap\n\nclient = ldap.initialize(\"ldap://127.0.0.1:1389\")\nstatus = client.simple_bind()\nquery_result = client.search_s(\"dc=example,dc=org\", ldap.SCOPE_SUBTREE)\n</code></pre>"},{"location":"dev-notes/ldap.html#basic-authenticated-query","title":"Basic authenticated query","text":"<pre><code>ldapsearch -H ldap://127.0.0.1:1389 -x -LLL -s base -D \"cn=admin,dc=example,dc=org\" -w pw -b \"ou=users,dc=example,dc=org\" -v\n</code></pre> <pre><code>import ldap\n\nclient = ldap.initialize(\"ldap://127.0.0.1:1389\")\nstatus = client.simple_bind(\"admin\", \"pw\")\nquery_result = client.search_s(\"dc=example,dc=org\", ldap.SCOPE_SUBTREE)\n</code></pre>"},{"location":"dev-notes/ldap.html#basic-authenticated-query-interactive-password","title":"Basic authenticated query interactive password","text":"<pre><code>ldapsearch -H ldap://127.0.0.1:1389 -x -LLL -s base -D \"cn=admin,dc=example,dc=org\" -W\n</code></pre>"},{"location":"dev-notes/ldap.html#references-resources","title":"References &amp; Resources","text":""},{"location":"dev-notes/ldap.html#links","title":"Links","text":"<ul> <li>OpenLDAP Docker Image</li> <li>How to setup OpenLdap</li> <li>Tutorial LDAP Utilis</li> <li>Apply changes in LDAP</li> </ul>"},{"location":"dev-notes/ldap.html#libraries","title":"Libraries","text":"<ul> <li>python-ldap</li> </ul>"},{"location":"dev-notes/letsencrypt.html","title":"Let's Encrypt","text":""},{"location":"dev-notes/letsencrypt.html#disable-certbot-login","title":"Disable Certbot login","text":""},{"location":"dev-notes/letsencrypt.html#add-ssltls-group-to-system-acme","title":"Add SSL/TLS group to system (acme)","text":"<pre><code>sudo useradd cerbot\nsudo groupadd -U certbot acme\nsudo groupmems -g acme -a nginx\n</code></pre>"},{"location":"dev-notes/letsencrypt.html#create-directories-and-setup-right-for-non-root-configuration","title":"Create directories and setup right for non root configuration","text":"<pre><code>sudo mkdir -m 0740  /etc/letsencrypt/ /var/log/letsencrypt/ /var/lib/letsencrypt/\nsudo chown -R certbot:acme /etc/letsencrypt/ /var/log/letsencrypt/ /var/lib/letsencrypt/\n</code></pre>"},{"location":"dev-notes/letsencrypt.html#run-commands-as-certbot","title":"Run commands as certbot","text":"<ul> <li>3.1. Create/Activate virtual env</li> <li>3.2. install certbot</li> <li>3.3 run certbot</li> </ul> <pre><code>sudo su -s /bin/fish certbot\n</code></pre>"},{"location":"dev-notes/letsencrypt.html#various-commands","title":"Various Commands","text":"<pre><code>certbot certonly -n --agree-tos --email foo@gmail.com --expand --webroot -d blog.foo.dev -d foo.dev\n</code></pre> <pre><code>sudo chown root:acme /etc/nginx/nginx.conf\nsudo chown root:acme /var/log/nginx/error.log\n</code></pre> <pre><code>certbot certonly -n --agree-tos --email foo@gmail.com --webroot -w /usr/share/nginx/html -d foo.dev -d blog.foo.dev \n</code></pre>"},{"location":"dev-notes/maven.html","title":"Maven","text":"<p>Maven is a build automation and project management tool primarily used for Java projects.</p>"},{"location":"dev-notes/maven.html#features","title":"Features","text":"<ul> <li>Dependency Management</li> <li>Standardized Directory Structure</li> <li>Lifecycle Management</li> <li>Plugin System</li> <li>Build Automation</li> </ul>"},{"location":"dev-notes/maven.html#basic-maven-commands","title":"Basic Maven Commands","text":"Command Description <code>mvn compile</code> Compiles the source code. <code>mvn test</code> Runs unit tests using a testing framework like JUnit. <code>mvn package</code> Packages the compiled code into a distributable format, such as a JAR or WAR file. <code>mvn clean</code> Cleans the working directory by removing files generated by the previous build, similar to <code>make clean</code>. <code>mvn install</code> Performs the complete build cycle including testing and integration tests, and installs the package into the local repository cache (<code>~/.m2</code>). <code>mvn install -DskipTests</code> Builds the project and installs it into the local repository without running tests. <code>mvn install -T 1C -DskipTests</code> Builds and installs the project using one thread per CPU core, without running tests. <code>mvn site</code> Generates project documentation, though this is rarely used."},{"location":"dev-notes/maven.html#general-concepts","title":"General Concepts","text":""},{"location":"dev-notes/maven.html#lifecycle","title":"Lifecycle","text":"<p>A <code>Lifecycle</code> is a sequence of <code>Phases</code> which get executed sequentially.</p> Maven Lifecycle Description default Handles project deployment. This is the main lifecycle. clean Cleans up artifacts created by prior builds. site Generates project documentation."},{"location":"dev-notes/maven.html#default-lifecycle-phases","title":"Default Lifecycle Phases","text":"Phase Description validate Validates the project is correct and all necessary information is available. initialize Initializes build state, e.g., sets up properties or creates directories. generate-sources Generates any source code for inclusion in compilation. process-sources Processes the source code in some manner. generate-resources Generates resources, like copying extra files for inclusion in the build. process-resources Processes resources such as filtering. compile Compiles the source code. process-classes Processes the compiled files, e.g., post-processing bytecode manipulation. generate-test-sources Generates any test source code for inclusion in compilation. process-test-sources Processes the test source code in some manner. generate-test-resources Creates resources needed for testing. process-test-resources Copies and processes the resources needed for testing. test-compile Compiles the test source code. process-test-classes Processes the compiled test classes. test Runs tests using a suitable unit testing framework. prepare-package Prepares the package for distribution. package Packages the compiled code in its distributable format, e.g., a JAR. pre-integration-test Executes processes needed before integration tests. integration-test Executes integration tests if any. post-integration-test Performs actions required after integration tests have run. verify Checks if the project meets quality criteria. install Installs the package into the local repository for use as a dependency. deploy Copies the final package to the remote repository for sharing."},{"location":"dev-notes/maven.html#clean-lifecycle-phases","title":"Clean Lifecycle Phases","text":"Phase Description pre-clean Executes processes needed before clean. clean Removes files generated at build time. post-clean Executes processes needed after clean."},{"location":"dev-notes/maven.html#site-lifecycle-phases","title":"Site Lifecycle Phases","text":"Phase Description pre-site Executes processes needed before site generation. site Generates the project's site documentation. post-site Executes processes needed after site generation. site-deploy Deploys the generated site documentation."},{"location":"dev-notes/maven.html#phases","title":"Phase(s)","text":"<p>A phase is a step in the build lifecycle. If a phase gets executed, everything up to and including the previous phase in the sequence is executed in order beforehand.</p>"},{"location":"dev-notes/maven.html#goals","title":"Goal(s)","text":"<p>A goal represents a single, specific task that contributes to building and managing a project. Each goal is defined in a Maven plugin.</p>"},{"location":"dev-notes/maven.html#links-resources","title":"Links &amp; Resources","text":"<ul> <li>Apache Maven Project</li> </ul>"},{"location":"dev-notes/priviledged-ports.html","title":"Bind Priviledged Prots","text":""},{"location":"dev-notes/priviledged-ports.html#setcap","title":"setcap","text":"<pre><code>setcap 'cap_net_bind_service=+ep' /path/to/program\n</code></pre>"},{"location":"dev-notes/priviledged-ports.html#autobind","title":"autobind","text":"<p>see man 1 autobind</p>"},{"location":"dev-notes/priviledged-ports.html#sysctl","title":"sysctl","text":"<pre><code>sysctl net.ipv4.ip_unprivileged_port_start=80\n</code></pre> <p>or persistent</p> <pre><code>sysctl -w net.ipv4.ip_unprivileged_port_start=80.\n</code></pre> <p>Danger</p> <p>Not a good idea; it allows binding of all ports starting at 80 as non-privileged. Instead, consider making exceptions for an app or for container binding.</p>"},{"location":"dev-notes/priviledged-ports.html#resources-links","title":"Resources &amp; Links","text":"<ul> <li>StackOverflow</li> <li>Superuser</li> </ul>"},{"location":"dev-notes/technical-user.html","title":"Setting up a technical user","text":""},{"location":"dev-notes/technical-user.html#add-user","title":"Add user","text":"<pre><code>useradd &lt;name&gt;\n</code></pre>"},{"location":"dev-notes/technical-user.html#disable-login-shell","title":"Disable login shell","text":"<pre><code>usermod -s /bin/false &lt;name&gt;\n</code></pre> <p>Info</p> <p>Consider SSH Allow and Deny lists, as well as permitting only certificate-based logins.</p>"},{"location":"dev-notes/technical-user.html#execute-commands-as-user","title":"Execute commands as user","text":"<pre><code>sudo su -s &lt;shell&gt; &lt;username&gt;\n</code></pre>"},{"location":"dev-notes/tls.html","title":"TLS","text":""},{"location":"dev-notes/tls.html#log-ssltls-session-keys","title":"Log SSL/TLS session keys","text":"<pre><code>export SSLKEYLOGFILE=`pwd`/tls-key.log \n</code></pre>"},{"location":"dev-notes/tls.html#references-resources","title":"References &amp; Resources","text":"<ul> <li>Wikipedia: Transport Layer Secuirity</li> <li>Openssl x509 config</li> <li>Openssl config format</li> <li>RFC 8446 (TLS 1.3)</li> <li>PKCS Certification Request Syntax</li> </ul>"},{"location":"images/DALL-E/index.html","title":"README","text":""},{"location":"images/DALL-E/index.html#directory-content-license-information","title":"Directory Content License Information","text":"<p>This directory contains images and files that were generated using tools provided by OpenAI, such as DALL-E.</p>"},{"location":"images/DALL-E/index.html#terms-and-license","title":"Terms and License","text":"<p>All images and files within this directory are subject to the terms and conditions set forth by OpenAI. These works are generated by AI models developed by OpenAI and, as such, fall under specific usage terms dictated by OpenAI's policies.</p> <p>Please note that while these images and files can be used for various purposes, the copyright and related rights are owned by OpenAI, and users must adhere to OpenAI's terms of use.</p> <p>For more detailed information regarding the terms, conditions, and licensing of these AI-generated works, please refer to the OpenAI website.</p>"},{"location":"images/DALL-E/index.html#usage-guidelines","title":"Usage Guidelines","text":"<p>Users of these images and files should ensure that their use complies with OpenAI's terms of service and any relevant legal standards. This includes, but is not limited to, considerations for commercial use, rights to reproduce, modify, or utilize these works for specific purposes.</p>"},{"location":"images/DALL-E/index.html#disclaimer","title":"Disclaimer","text":"<p>This README is provided for informational purposes only and does not constitute legal advice. If you have any specific questions regarding the use of AI-generated content and its legal implications, it is recommended to consult legal professionals.</p>"},{"location":"skills/index.html","title":"Skills","text":""},{"location":"skills/index.html#overview","title":"Overview","text":"<ul> <li> Python</li> <li> CLI's</li> <li> Rust</li> <li> Tooling &amp; Integration</li> <li> C++</li> <li> Embedded</li> <li> SQL</li> <li> Networking</li> <li> LUA</li> <li> Testing</li> <li> Linux</li> <li> Technical Support &amp; Development</li> </ul>"},{"location":"skills/index.html#technical","title":"Technical","text":""},{"location":"skills/index.html#programming-languages","title":"Programming Languages","text":"Langauge Skill Notes <code>C/C++</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef c++98, c++03, c++11, embedded, tooling <code>Python</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef 2.7, 3.x, tooling, testing, backend <code>Rust</code> \u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef edition [2015, 2018, 2021], embedded, tooling <code>SQL</code> \u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef backend, sqlite, exasol, postgres <code>Lua</code> \u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef scripting, 5.1, elua, nvim <code>Shell</code> \u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef scripting, sh, bash, zsh <code>Go</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef tooling <code>ASM</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef arm, ppc, x86, x86_64 <code>Ruby</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef web application, tooling <code>js</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef web requests <code>C#</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef web frontend (silverlight) <code>Java</code> \u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef backend, webservices, tooling"},{"location":"skills/index.html#topics","title":"Topics","text":"Topic Skill Notes <code>Embedded</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef bare-metal, rtos, arm, ppc, tricore, driver, systems-programming <code>Automotive</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef bus-systems, routing, gateway, body domain controller, fusi, autosar <code>Tooling</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef dev-tooling, project-tooling, test-tooling <code>Testing</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef unit-tests, integration-tests, system-tests, remote testing, hardware-testing <code>Network Protocols</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef ip, udp, tcp, multicast, protocol-design, protocol-testing, protocol-analysis <code>Devops</code> \u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef server administration, CI/CD, automation, tooling <code>Containers</code> \u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef docker, podman, lcx <code>Backend</code> \u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef databases, on-prem, services, server-administration, cloud"},{"location":"skills/index.html#non-technical","title":"Non-Technical","text":""},{"location":"skills/index.html#languages","title":"Languages","text":"Langauge Skill Notes <code>German</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef first language, mother tongue <code>English</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef"},{"location":"skills/index.html#topics_1","title":"Topics","text":"Topic Skill Notes <code>Education / Enabling</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef talks, workshops, mentoring, onboarding, developer support <code>Team-Coordination</code> \u2b24\u2b24\u2b24\u2b24\u2b24\u2b24\u25ef\u25ef\u25ef\u25ef guidelines, best practices, upstream communication, chunking work <p>Last Update: 26.09.2025</p>"},{"location":"talks/cli-first/css/theme/index.html","title":"Index","text":""},{"location":"talks/cli-first/css/theme/index.html#dependencies","title":"Dependencies","text":"<p>Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment installed before proceeding: https://revealjs.com/installation/#full-setup</p>"},{"location":"talks/cli-first/css/theme/index.html#creating-a-theme","title":"Creating a Theme","text":"<p>To create your own theme, start by duplicating a <code>.scss</code> file in /css/theme/source. It will be automatically compiled from Sass to CSS (see the gulpfile) when you run <code>npm run build -- css-themes</code>.</p> <p>Each theme file does four things in the following order:</p> <ol> <li> <p>Include /css/theme/template/mixins.scss Shared utility functions.</p> </li> <li> <p>Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3.</p> </li> <li> <p>Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please.</p> </li> <li> <p>Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.</p> </li> </ol>"},{"location":"blog/archive/2024.html","title":"2024","text":""},{"location":"blog/archive/2023.html","title":"2023","text":""},{"location":"blog/category/cli.html","title":"CLI","text":""},{"location":"blog/category/arguments.html","title":"Arguments","text":""},{"location":"blog/category/unix.html","title":"Unix","text":""},{"location":"blog/category/linux.html","title":"Linux","text":""},{"location":"blog/category/macos.html","title":"MacOs","text":""},{"location":"blog/category/windows.html","title":"Windows","text":""},{"location":"blog/category/ddoc.html","title":"DDOC","text":""},{"location":"blog/category/networking.html","title":"Networking","text":""},{"location":"blog/category/ip.html","title":"IP","text":""},{"location":"blog/category/python.html","title":"Python","text":""},{"location":"blog/category/idioms.html","title":"Idioms","text":""},{"location":"blog/category/best-practises.html","title":"Best-Practises","text":""},{"location":"blog/category/learn.html","title":"Learn","text":""},{"location":"blog/category/talks.html","title":"Talks","text":""},{"location":"blog/category/podcast.html","title":"Podcast","text":""},{"location":"blog/category/books.html","title":"Books","text":""},{"location":"blog/category/courses.html","title":"Courses","text":""}]}